package day15;

import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.function.Function;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class StreamEx16 {
	public static void main(String[] args) {
		
		List<Person> list = Arrays.asList(
				new Person("aaa", 10, Person.Gender.MALE, Person.City.Seoul),
				new Person("bbb", 20, Person.Gender.FEMALE, Person.City.Pusan),
				new Person("ccc", 5, Person.Gender.MALE, Person.City.Pusan),		
				new Person("ddd", 10, Person.Gender.FEMALE, Person.City.Seoul)				
		);	 
		
		// 사람들을 성별로 그룹핑하고, 같은 그룹에 속하는 사람 List를 생성한 
		// 성별을 키로, 사람 List를 값으로 갖는 Map을 얻어보자.
		
		Stream<Person> orgStream = list.stream();
		
		// Person 주고, Gender 받을게 (그룹핑 기준)
		Function<Person, Person.Gender> classifier = Person::getGender;
		
		// Person 주고, 생략, Map으로 받을게 Map의 키는 Gender고, 값은 Person이 들어 있는 리스트
		Collector<Person, ?, Map<Person.Gender, List<Person>>> collector
				= Collectors.groupingBy(classifier);
		
		Map<Person.Gender, List<Person>> mapList = orgStream.collect(collector);
		
		// 줄여서 작성
		Map<Person.Gender, List<Person>> genderMap = list.stream().collect(Collectors.groupingBy(Person::getGender));
		
		// 출력 확인
		System.out.println("*** 남그룹 ***");
		mapList.get(Person.Gender.MALE).stream()
		.forEach(p -> System.out.println(p.getName() + " " + p.getGender()));
		
		System.out.println("*** 여그룹 ***");
		mapList.get(Person.Gender.FEMALE).stream()
		.forEach(p -> System.out.println(p.getName() + " " + p.getGender()));
		
		
		
		
		
		
		
		
	}
}
