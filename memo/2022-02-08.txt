[day 02]

1. 입력문
	1) System.in : 키보드 장치를 직접 제어, 키 입력을 받는 표준 입력 스트림 객체
		키보드 입력 > System.in 입력스트림 > 바이트데이터 > Scanner > 형변환된 데이터
		> 자바 응용프로그램
	2) Scanner: 자바 패키지에서 제공하는 클래스, 원하는 타입으로 변환
		#1. import문 : Scanner 클래스가 있는 제공 패키지를 여기서 사용하겠다!!
			import java.util.Scanner; (폴더 = 패키지)
			* 클래스 밖, packcage 밑에 작성
		#2. Scanner 객체 생성
			****** Scanner sc = new Scanner(System.in);
		#3. 입력받기
			String 변수명 = sc.nextLine(); => 문자열 String 타입으로 리턴해줌
			nextLine()은 입력받고 싶은만큼 계속 사용 가능.
		#4. Scanner 객체 닫기
			sc.close();

			* 2~4까지는 main 메서드 안에 작성

	3) String 값 형변환
		String -> int : Integer.parseInt(String값);
		String -> double : Double.parseDouble(String값);

2. 연산자 operator
	1) 종류
		단항연산자		: +(양수) -(음수) ++ -- !
		이항연산자
			산술연산자 	: + - * / %
			비교연산자	: < <= > >= == !=
			논리연산자	: && ||
		삼항연산자		: ? :
		대입연산자		: =
		복합대입연산자		: 산술+대입 : += -= *= /= %=
		(쉬프트/비트 연산자)

	2) 연산자 우선순위 (높은순)
		단항연산자 : ++ --  (전위형)
			     + - (양수/음수) ++ -- (후위형) !
		형변환 : (타입)
		산술연산자 : * / %
			     + - (덧셈/뺄셈)
		(쉬프트연산자)
		비교연산자 : < <= > >= == != intstanceof()
		(비트연산자)
		논리연산자 : &&
			     ||
		삼항연산자 : ? :
		(복합)대입연산자 : = += -= *= /= %=	

3. 제어문
	- 조건문	: if, switch
	- 반복문	: while, do-while, for
	- 보조제어문 	: break(강제종료), continue(반복하다 건너띄기)

	1) if 조건문 *
		조건이 참이면 영역안의 코드를 실행시킨다.

		[구조1]
		if(조건식){
			// 조건식이 참일때 실행할 코드들 작성
		}

		조건식 : boolean 타입의 변수 혹은 비교연산이나 논리연산이 혼합된 식으로 구성		
			 반드시 결과가 true / false 둘중 하나여야 성립
		영역안의 코드가 1개의 명령일 경우 중괄호 생략가능 (가급적이면 적으세요~)

		[구조2] : 둘 중 하나의 블럭은 반드시 실행됨. else는 옵션(반드시 작성X)
		if(조건식) {
			// 조건식이 참일때 실행할 코드들 작성...
		}else{
			// 조건이 참이 아닐때 실행할 코드들 작성...
		}

		[구조3]
		if(조건식1){
			// 조건1이 참일 때 실행할 코드들...
		} else if(조건식2) {
			// 조건2가 참일 때 실행할 코드들...
		} else if(조건식3) {
			// 조건3가 참일 때 실행할 코드들...
		} else {
			// 위 조건들이 모두 성립되지 않을 때 뭔가 실행해야되면
			// else를 붙혀서 코드들 작성...
		}

	2) switch 조건문
		다중선택문 : 하나의 변수값을 평가하여, 각 값에 대해 개별적으로 처리하는 문장.

		[구조]
		switch(변수) {
		case 값1: 
			// 값1과 변수의 값이 동일한 경우 실행할 코드들...
			break;
		case 값2:
			// 값2와 변수의 값이 동일한 경우 실행할 코드들...
			break;			
		case 값3:
			// 값3과 변수의 값이 동일한 경우 실행할 코드들...
			break;	
		....
		defualt:
			// 위 값들과 일치하지 않을 경우 수행할 명령이 있으면 default에 작성
			break; // 마지막에 위치한 break는 생략 가능
		}

		특징 :
		- if 문으로 대체 가능, 비교해볼 값이 많다면 가독성면에서는 switch가 더 좋을 수도...
		- 가능 변수 타입 : int, char, String
		- case 다음에는 반드시 값이 하나가 와야 한다.
		- default 생략 가능