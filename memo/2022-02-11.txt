[day05]

1. 객체 지향 Object Oriented Programming (OOP)
	객체 : 우리 주변의 모든 것. 고유한 특성과 기능을 가지고 있다.
	객체 지향 : 실세계의 객체를 프로그램 내에 표현하기 위해 클래스와
		객체 개념을 도입한 것.

	1) 특징
		코드의 재사용성이 높다 : API 사용
		코드 관리가 쉽다 : 상속, 다형성 추상화, 캡슐화...
		신뢰성이 높은 프로그램 개발 가능

		# 캡슐화 encapsulation : 자바가 지향하는 코드 스타일
		# 상속 inheritance
			부모가 자손에게 가진것들을 물려주는 것.
		# 다형성 polymorphism
			상속관계에서 성립
			같은 이름의 메서드가 클래스나 객체에 따라
			기능을 다르게 동작하도록 구현되는 것을 말함.

	절차지향 : 순서대로 진행되는 코드 방식
	객체지향 : 부품처럼 서로 상호작용하며 진행되는 방식

2. 클래스와 객체
	
	1) 클래스 (설계도)
		객체를 정의해 놓은 것
		용도는 객체를 만들기 위한 것
		붕어빵틀
	2) 객체
		실제로 존재하는 것, 사물, 개체
		클래스 모양 그대로 생성된 실체
		붕어빵 (틀로 만든...)

	3) 객체와 인스턴스
		객체 == 인스턴스

	4) 객체 (속성 + 기능)
		속성과 기능을 멤버라고 부른다.
		속성 : 멤버변수, 필드
		기능 : 메서드

	5) 인스턴스(객체) 생성과 사용
		순서 : 클래스(설계도 만들기) -> 객체 생성 -> 사용
		
		# 클래스 구조
		class 클래스명 {
			변수(속성, 필드)
			메서드
		}

		* 클래스명은 대문자로 시작, 숫자로 시작X, 띄어쓰기X
				특수문자 _ $, 패키지 안에 이름은 한 개만 존재하게.

	6) 인스턴스(객체) 생성
		
		# 선언
		클래스명 참조변수명;
		Scanner sc;

		# 생성
		참조변수 new 클래스명();
		sc = new Scanner(System.in);

		# 줄여서
		클래스명 참조변수 = new 클래스명();
		Scanner sc = new Scanner(System.in);

		* 참조 변수(레퍼런스 변수) : 객체를 가르키는,
			객체의주소(레퍼런스)를 담고 있을 변수
			-> 객체 생성전, 참조변수 먼저 선언만 하면
			메모리에 아직 객체가 생성되어 올라간 것이 아니다.
			그냥 주소 담을 수 있는 변수만 만들어 놓은 것.

		* new : 새로운 클래스 모양의 메모리를 새로 점유시키는 중요한 키워드
				
	7) 객체 멤버(변수or메서드)에 접근 : 점(.) 연산자 사용
		sc.nextLine();

	** 정리하자면
		클래스 == 사용자 정의 데이터 타입
		기본형 : 메모리 양이 정해진 것
		참조형(클래스) : 개발자가 필요한만큼 메모리를 직접 지정해서 만든 것

		클래스 : 유사한 특징을 지닌 객체들의 "속성"과 기능을 묶어놓은 집합
		객체 : 실제 존재하는 Object 를 말함

3. 변수의 종류
	: 선언 위치(어디서 변수가 만들어졌느냐)에 따라 변수의 종류와 성질이 달라진다
	(데이터 타입에 따라 기본형, 참조형)

	1) 클래스 변수
		- 클래스 안에서 생성
		- 이름 앞에 static 붙는다.
		- 종류 : 클래스 기본형 변수, 클래스 참조형 변수
		- 특징 : 모든 객체들이 공유하는 변수 (한개 공간 만들어 같이 사용)
			가장 먼저 생성됨. new로 객체생성 하지 않아도 바로 사용 가능
		- 접근법
			클래스명.클래스변수명 (이 형태로 사용하자!!)
			참조변수명.클래스변수명 (객체 생성한 경우)
		- 유효기간
			프로그램 시작 -> 프로그램 종료

	2) 인스턴스 변수
		- 클래스 안에 생성

		- 종류 : 인스턴스 기본형 변수, 인스턴스 참조형 변수
		- 특징 : 각 객체(인스턴스)마다 개별적인 저장 공간을 갖는다.
			new를 한 후(객체 생성 후) 메모리에 올라가면 사용 가능.
			가르키는 참조변수가 없을 경우 가비지컬렉터가 수거해 감.(메모리 해제)
			또는 프로그램 종료시 소멸
		- 접근법
			참조변수명.인스턴스변수명
		- 유효기간
			new~~ --> 링크가 끊겨 GC가 수거해가거나 프로그램 종료

	3) 지역변수
		- 메서드 안에서 생성

		- 종류 : 지역 기본형 변수, 지역 참조형 변수
		- 특징 : 메서드(,조건문,반복문내)에서 선언된 변수를 가르키며,
			메서드 종료시 소멸
		- 유효기간
			: 메서드 안에서 선언시 --> 메서드가 종료

	# 메모리 로딩 순서
		| 클래스 변수 ------------------------------->| (힙 / 스택 영역 X - 메소드 영역)
			               | 인스턴스 변수 ------>| (종료 전에도 링크가 끊기면 소멸 됨 - 힙 메모리에 존내)
			   | 지역 변수 --------------->| (메서드, 반복문, 조건문이 끝나면 소멸 - 스택 메모리에 존재)
	클래스 -> static -> main 실행 -> new~ instance
	|클래스 범위 만들고
		|메인 메서드 포함 메모리에 로딩
			   | main이 있으면 실행
				 	| new 객체 생성할 때마다 각각 메모리에 로딩	